{"ast":null,"code":"import { of, switchMap } from 'rxjs';\nexport class BaseService {\n  constructor(key, indexedDBService) {\n    this.key = key;\n    this.indexedDBService = indexedDBService;\n  }\n  create(model) {\n    return this.indexedDBService.addItem(model, this.key);\n  }\n  readAll() {\n    return this.indexedDBService.getItems(this.key);\n  }\n  read(id) {\n    return this.indexedDBService.getItems(this.key).pipe(switchMap(list => of(list.find(item => item.id === id))));\n  }\n}","map":{"version":3,"mappings":"AACA,SAAoBA,EAAE,EAAEC,SAAS,QAAO,MAAM;AAG9C,OAAM,MAAOC,WAAW;EACtBC,YACSC,GAAW,EACXC,gBAAqC;IADrC,QAAG,GAAHD,GAAG;IACH,qBAAgB,GAAhBC,gBAAgB;EAEzB;EAEAC,MAAM,CAACC,KAAQ;IACb,OAAO,IAAI,CAACF,gBAAgB,CAACG,OAAO,CAACD,KAAK,EAAE,IAAI,CAACH,GAAG,CAAC;EACvD;EAEAK,OAAO;IACL,OAAO,IAAI,CAACJ,gBAAgB,CAACK,QAAQ,CAAC,IAAI,CAACN,GAAG,CAAC;EACjD;EAEAO,IAAI,CAACC,EAAM;IACT,OAAO,IAAI,CAACP,gBAAgB,CAACK,QAAQ,CAAC,IAAI,CAACN,GAAG,CAAC,CAACS,IAAI,CAClDZ,SAAS,CAAEa,IAAI,IAAMd,EAAE,CAACc,IAAI,CAACC,IAAI,CAAEC,IAAO,IAAMA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAM,CAAC,CAAC,CAAC;EAC3E","names":["of","switchMap","BaseService","constructor","key","indexedDBService","create","model","addItem","readAll","getItems","read","id","pipe","list","find","item"],"sourceRoot":"","sources":["/home/naser/workspace/communer/share-location/src/app/core/services/base.service.ts"],"sourcesContent":["import {IBaseModel, ID} from '../models/base-model';\nimport {Observable, of, switchMap} from 'rxjs';\nimport {IndexedDbService} from './indexed-db.service';\n\nexport class BaseService<T extends IBaseModel> {\n  protected constructor(\n    public key: string,\n    public indexedDBService: IndexedDbService<T>,\n  ) {\n  }\n\n  create(model: T): Observable<T> {\n    return this.indexedDBService.addItem(model, this.key);\n  }\n\n  readAll(): Observable<T[]> {\n    return this.indexedDBService.getItems(this.key);\n  }\n\n  read(id: ID): Observable<T> {\n    return this.indexedDBService.getItems(this.key).pipe(\n      switchMap((list) =>  of(list.find((item: T) =>  item.id === id) as T)));\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}